#include <iostream>
#include <vector>
#include <string>
using namespace std;
class ToDoList {
private:
    struct Task {
        string description;
        bool completed;

        Task(string desc) : description(desc), completed(false) {}
    };
    vector<Task> tasks;
public:
    void addTask(const string& description) {
        tasks.push_back(Task(description));
        cout << "Task added: " << description << "\n";
    }
    void viewTasks() const {
        if (tasks.empty()) {
            cout << "No tasks to show.\n";
            return;
        }

        cout << "Tasks:\n";
        for (size_t i = 0; i < tasks.size(); ++i) {
            cout << i + 1 << ". [" << (tasks[i].completed ? "X" : " ") << "] " << tasks[i].description << "\n";
        }
    }
    void markTaskCompleted(int taskNumber) {
        if (taskNumber > 0 && taskNumber <= tasks.size()) {
            tasks[taskNumber - 1].completed = true;
            cout << "Task " << taskNumber << " marked as completed.\n";
        } else {
            cout << "Invalid task number.\n";
        }
    }
    void removeTask(int taskNumber) {
        if (taskNumber > 0 && taskNumber <= tasks.size()) {
            cout << "Task " << taskNumber << " removed: " << tasks[taskNumber - 1].description << "\n";
            tasks.erase(tasks.begin() + taskNumber - 1);
        } else {
            cout << "Invalid task number.\n";
        }
    }
};
int main() {
    ToDoList todoList;
    char choice;
    string description;
    int taskNumber;
    do {
        cout << "\nTo-Do List Manager\n";
        cout << "1. Add Task\n";
        cout << "2. View Tasks\n";
        cout << "3. Mark Task as Completed\n";
        cout << "4. Remove Task\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;
        cin.ignore(); 

        switch (choice) {
            case '1':
                cout << "Enter task description: ";
                getline(cin, description);
                todoList.addTask(description);
                break;
            case '2':
                todoList.viewTasks();
                break;
            case '3':
                cout<<"Enter task number to mark as completed: ";
                cin>>taskNumber;
                todoList.markTaskCompleted(taskNumber);
                break;
            case '4':
                cout<<"Enter task number to remove: ";
                cin>>taskNumber;
                todoList.removeTask(taskNumber);
                break;
            case '5':
                cout<<"Exiting\n";
                break;
            default:
                cout<<"Please try again.\n";
        }
    } while (choice != '5');
    return 0;
}
